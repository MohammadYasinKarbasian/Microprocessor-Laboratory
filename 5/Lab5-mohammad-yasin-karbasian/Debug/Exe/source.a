;#include <headers.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0001 0004 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0005  OverFlow = 1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0006 }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;
;interrupt [TIM1_CAPT] void timer1_capt_isr(void)
; 0001 0009 {
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0001 000A  q6();
;PCODE: $00000016 VOL: 0
; 0001 000B }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0001 000E {
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0001 000F TCNT2=0xB2;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0001 0010 q5();
;PCODE: $0000001E VOL: 0
; 0001 0011 }
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;
;void q2(char duty_cycle){
; 0001 0013 void q2(char duty_cycle){
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0001 0014  TCNT0=0x00;
;PCODE: $00000024 VOL: 0
;	duty_cycle -> Y+0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0015  OCR0= (255*duty_cycle+50)/100;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 0016 }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;
;void q4(){
; 0001 0018 void q4(){
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 0019  char temp;
; 0001 001A  temp = PINA;
;PCODE: $00000034 VOL: 0
;	temp -> R17
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 001B  temp = (temp*100)/255;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0001 001C  q2(temp);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 001D }
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;
;void changeB(char a,char b , char c, char d){
; 0001 001F void changeB(char a,char b , char c, char d){
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0001 0020                 PORTB.4 = a;
;PCODE: $00000044 VOL: 0
;	a -> Y+3
;	b -> Y+2
;	c -> Y+1
;	d -> Y+0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0001 0021                 PORTB.5 = b;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0022                 PORTB.6 = c;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0023                 PORTB.7 = d;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0001 0024 }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;
;void q5(){
; 0001 0026 void q5(){
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0001 0027     char str[16];
; 0001 0028     if (counter<=100){
;PCODE: $00000072 VOL: 0
;	str -> Y+0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0001 0029         if (clockwies == 1 ){
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0001 002A             if (turn == 1) {
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0001 002B                 changeB(1,0,0,0);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0001 002C                 turn ++ ;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0001 002D             }
; 0001 002E             if (turn == 2) {
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0001 002F                 changeB(0,1,0,0);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0001 0030                 turn ++ ;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0001 0031             }
; 0001 0032             if (turn == 3) {
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0001 0033                 changeB(0,0,1,0);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0001 0034                 turn ++ ;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0001 0035             }
; 0001 0036             if (turn == 4) {
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0001 0037                 changeB(0,0,0,1);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0001 0038                 turn = 1 ;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0001 0039             }
; 0001 003A         }
;PCODE: $000000B3 VOL: 0
; 0001 003B         counter++;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0001 003C     }
; 0001 003D     if (counter==100){
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0001 003E            changeB(0,0,0,0);
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0001 003F            clockwies=0;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0001 0040            delay_ms(3000);
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0001 0041            counter++;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0001 0042     }
; 0001 0043 
; 0001 0044     if (counter >100 &&  counter<=200){
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0001 0045         if (clockwies == 0 ){
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0001 0046             if (turn == 1) {
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0001 0047                 changeB(0,0,0,1);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0001 0048                 turn ++ ;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0001 0049             }
; 0001 004A             if (turn == 2) {
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0001 004B                 changeB(0,0,1,0);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0001 004C                 turn ++ ;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0001 004D             }
; 0001 004E             if (turn == 3) {
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0001 004F                 changeB(0,1,0,0);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0001 0050                 turn ++ ;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0001 0051             }
; 0001 0052             if (turn == 4) {
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0001 0053                 changeB(1,0,0,0);
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0001 0054                 turn = 1;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0001 0055             }
; 0001 0056         }
;PCODE: $00000115 VOL: 0
; 0001 0057         counter++;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0001 0058     }
; 0001 0059     if (counter>200){
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0001 005A         counter=0;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0001 005B         clockwies=1;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0001 005C         delay_ms(3000);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0001 005D     }
; 0001 005E     speed = (60*90/360)/0.01;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0001 005F     sprintf(str,"%d",speed);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0001 0060     lcd_gotoxy(0,0);
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0001 0061     lcd_puts("        ");
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0001 0062     lcd_gotoxy(0,0);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0001 0063     lcd_puts(str);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0001 0064     lcd_gotoxy(6,0);
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0001 0065     lcd_puts("RPM");
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0001 0066 }
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0

	.DSEG
_0x2001B:
	.BYTE 0xD
;
;void q6(){
; 0001 0068 void q6(){

	.CSEG
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0001 0069  char str[16];
; 0001 006A  if(OverFlow==1){
;PCODE: $0000014D VOL: 0
;	str -> Y+0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0001 006B    old = ICR1L;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0001 006C    old += ICR1H*256;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0001 006D    OverFlow=0;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0001 006E  }
; 0001 006F  else{
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0001 0070   new = ICR1L;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0001 0071   new += ICR1H*256;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0001 0072   rpm = 1200000/(new-old);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0001 0073   old = new;
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0001 0074   if(rpm-display_rpm >=5 || rpm-display_rpm <=-5){
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0001 0075 
; 0001 0076     display_rpm = rpm;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0001 0077     sprintf(str, "DC: %d", display_rpm);
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0001 0078     lcd_gotoxy(0,1);
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0001 0079     lcd_puts("        ");
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0001 007A     lcd_gotoxy(0,1);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0001 007B     lcd_puts(str);
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0001 007C   }
; 0001 007D  }
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0001 007E }
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0

	.DSEG
_0x20021:
	.BYTE 0x9
;
;void init(){
; 0001 0080 void init(){

	.CSEG
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0001 0081 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0001 0082 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0001 0083 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0001 0084 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0001 0085 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0001 0086 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0001 0087 DDRD=(0<<DDD7) | (0<<DDD6) | (1<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0001 0088 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0001 0089 TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (0<<CS00);
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0001 008A TCNT0=0x00;
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0001 008B OCR0=0x33;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0001 008C TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0001 008D TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (0<<CS10);
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0001 008E TCNT1H=0x00;
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0001 008F TCNT1L=0x00;
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0001 0090 ICR1H=0x00;
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0001 0091 ICR1L=0x00;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0001 0092 OCR1AH=0x00;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0001 0093 OCR1AL=0x00;
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0001 0094 OCR1BH=0x00;
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0001 0095 OCR1BL=0x00;
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0001 0096 ASSR=0<<AS2;
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0001 0097 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (1<<CS22) | (1<<CS21) | (1<<CS20);
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0001 0098 TCNT2=0xB2;
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0001 0099 OCR2=0x00;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0001 009A TIMSK=(0<<OCIE2) | (1<<TOIE2) | (1<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0001 009B MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0001 009C MCUCSR=(0<<ISC2);
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0001 009D UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0001 009E ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0001 009F SFIOR=(0<<ACME);
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0001 00A0 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0001 00A1 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0001 00A2 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0001 00A3 lcd_init(16);
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0001 00A4 #asm("sei")
;PCODE: $000001E1 VOL: 0
	sei
;PCODE: $000001E2 VOL: 0
; 0001 00A5 }
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
