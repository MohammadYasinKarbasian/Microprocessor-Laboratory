;#include <header.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;char q1(char in_port){
; 0001 0003 char q1(char in_port){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0004  char data_in;
; 0001 0005  switch (in_port){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	in_port -> Y+1
;	data_in -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 0006   case(port_a):
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 0007     DDRA = 0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 0008     data_in = PINA;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0009     break;
;PCODE: $00000019 VOL: 0
; 0001 000A   case(port_b):
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 000B     DDRB = 0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 000C     data_in = PINB;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 000D     break;
;PCODE: $00000021 VOL: 0
; 0001 000E   case(port_c):
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 000F     DDRC = 0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0010     data_in = PINC;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 0011     break;
;PCODE: $00000029 VOL: 0
; 0001 0012   case(port_d):
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 0013     DDRD = 0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 0014     data_in = PIND;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 0015     break;
;PCODE: $00000031 VOL: 0
; 0001 0016  }
;PCODE: $00000032 VOL: 0
; 0001 0017  return data_in;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0001 0018 }
;PCODE: $00000038 VOL: 0
;
;void q2(char out_port, char data){
; 0001 001A void q2(char out_port, char data){
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 001B  switch (out_port){
;PCODE: $0000003B VOL: 0
;	out_port -> Y+1
;	data -> Y+0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0001 001C   case(port_a):
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0001 001D     DDRA = 0xFF;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0001 001E     PORTA = data;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0001 001F     break;
;PCODE: $00000044 VOL: 0
; 0001 0020   case(port_b):
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0001 0021     DDRB = 0xFF;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0001 0022     PORTB = data;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0001 0023     break;
;PCODE: $0000004C VOL: 0
; 0001 0024   case(port_c):
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0001 0025     DDRC = 0xFF;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0001 0026     PORTC = data;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0001 0027     break;
;PCODE: $00000054 VOL: 0
; 0001 0028   case(port_d):
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0001 0029     DDRD = 0xFF;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0001 002A     PORTD = data;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0001 002B     break;
;PCODE: $0000005C VOL: 0
; 0001 002C  }
;PCODE: $0000005D VOL: 0
; 0001 002D }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;
;void q3(int count, int delay){
; 0001 002F void q3(int count, int delay){
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0030  int i;
; 0001 0031  for(i=0;i<count;i++){
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;	count -> Y+4
;	delay -> Y+2
;	i -> R16,R17
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0001 0032     q2(port_b,0xFF);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0001 0033     delay_ms(delay);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0001 0034     q2(port_b, 0x00);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0001 0035     delay_ms(delay);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0001 0036 
; 0001 0037  }
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0001 0038 }
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;
;void q4(){
; 0001 003A void q4(){
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0001 003B  char data = q1(port_a);
; 0001 003C  q2(port_b,data);
;PCODE: $00000089 VOL: 0
;	data -> R17
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0001 003D }
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;
;void q5(int data, char enable_port, char data_port){
; 0001 003F void q5(int data, char enable_port, char data_port){
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0001 0040  unsigned char digit [10] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
; 0001 0041  int i;
; 0001 0042  for(i=0;i<5;i++){
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;	data -> Y+14
;	enable_port -> Y+13
;	data_port -> Y+12
;	digit -> Y+2
;	i -> R16,R17
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0001 0043 
; 0001 0044 
; 0001 0045  char a = data/1000;
; 0001 0046  char b = (data%1000)/100;
; 0001 0047  char c = (data%100)/10;
; 0001 0048  char d = data%10;
; 0001 0049 
; 0001 004A 
; 0001 004B  q2(enable_port,0b11111110);
;PCODE: $000000A7 VOL: 0
;	data -> Y+18
;	enable_port -> Y+17
;	data_port -> Y+16
;	digit -> Y+6
;	a -> Y+3
;	b -> Y+2
;	c -> Y+1
;	d -> Y+0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0001 004C  q2(data_port, digit[a]);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0001 004D  delay_ms(10);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0001 004E  q2(enable_port,0b11111111);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0001 004F 
; 0001 0050 
; 0001 0051  q2(enable_port,0b11111101);
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0001 0052  q2(data_port, digit[b]);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0001 0053  delay_ms(10);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0001 0054  q2(enable_port,0b11111111);
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0001 0055 
; 0001 0056 
; 0001 0057  q2(enable_port,0b11111011);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0001 0058  q2(data_port, digit[c]);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0001 0059  delay_ms(10);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0001 005A  q2(enable_port,0b11111111);
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0001 005B 
; 0001 005C  q2(enable_port,0b11110111);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0001 005D  q2(data_port, digit[d]);
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0001 005E  delay_ms(10);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0001 005F  q2(enable_port,0b11111111);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0001 0060 
; 0001 0061 }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0001 0062 }
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
